{"ast":null,"code":"var _jsxFileName = \"/Users/antonio/Documents/GitHub/jammingProject/src/Components/App/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport Spotify from \"../../util/Spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //As with all methods that we pass in React, we must first bind this to our new method\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlayList = this.savePlayList.bind(this);\n    this.search = this.search.bind(this);\n    this.state = {\n      searchResults: [],\n      playlistName: \"best hit 2000s\",\n      playlistTracks: []\n    };\n  }\n  search(term) {\n    Spotify.search(term).then(SearchResults => {\n      this.setState({\n        searchResults: SearchResults\n      });\n    });\n  }\n  savePlayList() {\n    console.log(\"test button trigger\");\n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: \"New Playlist\",\n        playlistTracks: []\n      });\n    });\n  }\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n  removeTrack(track) {\n    // Uses the track’s id property to filter it out of playlistTracks\n    let tracks = this.state.playlistTracks;\n    let updatedTracks = tracks.filter(currentTrack => currentTrack.id !== track.id);\n    this.setState({\n      playlistTracks: updatedTracks\n    });\n  }\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    // Use the track’s id property to check if the current song is in the playlistTracks state.\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    } else {\n      // If the id is new, add the song to the end of the playlist.\n      tracks.push(track);\n    }\n    // Set the new state of the playlist\n    this.setState({\n      playlistTracks: tracks\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Ja\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: \"mmm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), \"ing\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n          onSearch: this.search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-playlist\",\n          children: [/*#__PURE__*/_jsxDEV(SearchResults, {\n            onAdd: this.addTrack,\n            searchResults: this.state.searchResults\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Playlist, {\n            onSave: this.savePlayList,\n            onNameChange: this.updatePlaylistName,\n            onRemove: this.removeTrack,\n            playlistName: this.state.playlistName,\n            playlistTracks: this.state.playlistTracks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","SearchBar","SearchResults","Playlist","Spotify","jsxDEV","_jsxDEV","App","Component","constructor","props","addTrack","bind","removeTrack","updatePlaylistName","savePlayList","search","state","searchResults","playlistName","playlistTracks","term","then","setState","console","log","trackUris","map","track","uri","savePlaylist","name","tracks","updatedTracks","filter","currentTrack","id","find","savedTrack","push","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAdd","onSave","onNameChange","onRemove"],"sources":["/Users/antonio/Documents/GitHub/jammingProject/src/Components/App/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport SearchResults from \"../SearchResults/SearchResults\";\nimport Playlist from \"../Playlist/Playlist\";\nimport Spotify from \"../../util/Spotify\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    //As with all methods that we pass in React, we must first bind this to our new method\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlayList = this.savePlayList.bind(this);\n    this.search = this.search.bind(this);\n\n    this.state = {\n      searchResults: [],\n      playlistName: \"best hit 2000s\",\n      playlistTracks: [],\n    };\n  }\n\n  search(term) {\n    Spotify.search(term).then((SearchResults) => {\n      this.setState({ searchResults: SearchResults });\n    });\n  }\n\n  savePlayList() {\n    console.log(\"test button trigger\");\n    const trackUris = this.state.playlistTracks.map((track) => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({ playlistName: \"New Playlist\", playlistTracks: [] });\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name });\n  }\n\n  removeTrack(track) {\n    // Uses the track’s id property to filter it out of playlistTracks\n    let tracks = this.state.playlistTracks;\n\n    let updatedTracks = tracks.filter(\n      (currentTrack) => currentTrack.id !== track.id\n    );\n\n    this.setState({ playlistTracks: updatedTracks });\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    // Use the track’s id property to check if the current song is in the playlistTracks state.\n    if (tracks.find((savedTrack) => savedTrack.id === track.id)) {\n      return;\n    } else {\n      // If the id is new, add the song to the end of the playlist.\n      tracks.push(track);\n    }\n    // Set the new state of the playlist\n    this.setState({ playlistTracks: tracks });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>\n          Ja<span className=\"highlight\">mmm</span>ing\n        </h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults\n              onAdd={this.addTrack}\n              searchResults={this.state.searchResults}\n            />\n            <Playlist\n              onSave={this.savePlayList}\n              onNameChange={this.updatePlaylistName}\n              onRemove={this.removeTrack}\n              playlistName={this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}